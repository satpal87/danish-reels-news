
import { Clock, ExternalLink, ThumbsUp, Bookmark, Share2 } from "lucide-react";
import { Button } from "@/components/ui/button";
import { formatPublishedDate } from "@/lib/utils";
import { useNavigate } from "react-router-dom";

interface ArticleContentProps {
  article: any;
}

const ArticleContent = ({ article }: ArticleContentProps) => {
  const navigate = useNavigate();

  if (!article) {
    return (
      <div className="p-4 text-center">
        <p>Article not found</p>
        <Button 
          variant="outline" 
          className="mt-4"
          onClick={() => navigate(-1)}
        >
          Go Back
        </Button>
      </div>
    );
  }

  return (
    <div className="max-w-4xl mx-auto px-4 py-6">
      {/* Category and Reading Time */}
      <div className="flex items-center justify-between mb-4">
        <span className="bg-blue-600 text-white text-xs px-2 py-1 rounded">
          {article.category || "News"}
        </span>
        <div className="flex items-center text-gray-500 dark:text-gray-400 text-sm">
          <Clock className="h-4 w-4 mr-1" /> 
          <span>{Math.ceil((article.content?.length || 0) / 200) || 3} min read</span>
        </div>
      </div>

      {/* Title */}
      <h1 className="text-3xl md:text-4xl font-serif font-bold mb-6 leading-tight">
        {article.title_en || article.title}
      </h1>

      {/* Author and Published date */}
      <div className="flex items-center justify-between pb-6 border-b border-gray-200 dark:border-gray-800 mb-8">
        <div className="flex items-center">
          <div className="h-10 w-10 rounded-full bg-gray-300 overflow-hidden flex items-center justify-center text-gray-800 font-semibold">
            {article.author_name?.charAt(0) || 'A'}
          </div>
          <div className="ml-3">
            <p className="font-medium">{article.author_name || "AI Author"}</p>
            <p className="text-sm text-gray-500 dark:text-gray-400">
              {formatPublishedDate(article.published_date)}
            </p>
          </div>
        </div>
        
        <div className="flex space-x-2">
          <button className="p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800" aria-label="Save">
            <Bookmark className="h-5 w-5" />
          </button>
          <button className="p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800" aria-label="Like">
            <ThumbsUp className="h-5 w-5" />
          </button>
          <button className="p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800" aria-label="Share">
            <Share2 className="h-5 w-5" />
          </button>
        </div>
      </div>

      {/* Featured Image */}
      <div className="mb-8 rounded-2xl overflow-hidden aspect-[16/9]">
        <img
          src={article.image || 'https://placehold.co/1200x800?text=No+Image'}
          alt={article.title_en || article.title}
          className="w-full h-full object-cover"
        />
      </div>

      {/* Content */}
      <div className="prose prose-lg dark:prose-invert max-w-none mb-10">
        {article.html ? (
          <div dangerouslySetInnerHTML={{ __html: article.html }} />
        ) : (
          <>
            <p className="text-lg font-medium leading-relaxed mb-6">{article.summary_txt || article.summary}</p>
            <p className="leading-relaxed">
              This article explores the topic of {article.category || "news"} with a focus on 
              the latest developments and trends. The content is generated by AI to provide
              insightful perspective on current events.
            </p>
            <p className="leading-relaxed">
              Denmark has a rich history of journalism and media, dating back to the first 
              newspaper published in 1666. Today, Danish news sources are known for their 
              high quality reporting and journalistic ethics.
            </p>
          </>
        )}
      </div>

      {/* Tags */}
      {article.tags && (
        <div className="mb-8">
          <div className="flex flex-wrap gap-2">
            {(article.tags || ['News', 'Denmark', 'AI']).map((tag: string, idx: number) => (
              <span 
                key={idx} 
                className="bg-gray-100 dark:bg-gray-800 py-1 px-3 rounded-full text-sm"
              >
                #{tag}
              </span>
            ))}
          </div>
        </div>
      )}

      {/* Sources */}
      {article.sources && article.sources.length > 0 && (
        <div className="pt-6 border-t border-gray-200 dark:border-gray-800">
          <h3 className="text-lg font-medium mb-3">Sources</h3>
          <ul className="space-y-2">
            {article.sources.map((source: string, index: number) => (
              <li key={index} className="flex items-center">
                <ExternalLink className="h-4 w-4 mr-2 flex-shrink-0 text-blue-600" />
                <a 
                  href={source} 
                  target="_blank" 
                  rel="noopener noreferrer"
                  className="text-blue-600 hover:underline"
                >
                  {source}
                </a>
              </li>
            ))}
          </ul>
        </div>
      )}
    </div>
  );
};

export default ArticleContent;
